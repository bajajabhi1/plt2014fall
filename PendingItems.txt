Ocaml ---> 
	Null (HArsha) - Done
	If IN (abhi) - Done, updated corresponding tasks in CPP
	Add bracket to Print (HArsha) - Done
	String Concatenation (Abhi ) - Done,  updated corresponding tasks in CPP
	conv exr to Bool Type when inside If ( Abhi) - Done, added corresponding tasks in CPP
	Type (harsha) - Done
	Typestruct (harsha)  - Done
	MakeString (harsha) - Done
	! operator (Abhi ) - Done, added corresponding tasks in CPP
	File handling  (Harsha )
	Type checking (Abhi + harsha)
	return mainfunc should be removed
	decl should be removed and assign should work as declalartion (lowest priority)


C++ --->
	NOTE : All operators like && || ! need to be overloaded
	! --  testfile - TestNotOperator.jo
	+ -- This operator is mathematical for CPP but when overloading, it should alsp work for StringType + StringType and concat the string, testfile - TestStringConcat.jo

	If IN statement - add function <list>->contains(<any type here>), this again return BoolType
					testfile -- TestIfIn.jo

	Null (arpit)	--- Run testfiles\AllTypeCreation.jo for Null declaration
	Mathematical Operators (arpit)
	String Operators (arpit)
	Logical Operator (arpit)

	conv exr to Bool Type when inside If (chase), All boolean operators should return a BoolType object and BoolType will have a method called getBoolValue(), testfile - TestIfCondition.jo

	subtract from a list and json (arpit)
	File handling (chase)

	makeString (arpit) --- Run testfiles\MakeStringFunction.jo (ocaml prints CustType::makeString)
	typeStruct (chase ) --- Run testfiles\TestTypeStruct.jo (ocaml prints CustType::typeStruct)
	prettyPrint (arpit) --- Run testfiles\PrettyPrintJson.jo to test

	Typechecking ( Arpit + chase )

NOT SUPPORTING : 
	JSON - JSON 


Documentation : 
	4.1.1.
		json-json
		list access []
	File handling


DOCUMENTS:
	Final Report:
		Intro
		Tutorial
		Reference Manual (ie. updated LRM)
		Project Plan -- Manager
		Language Evolution -- Language Guru
		Translator Architecture -- System Architect
		Test Plan and Scripts -- Tester
		Conclusions
		Full Code Listing

	Final Presentation


Test:
	GCD Algorithm
	JSON Join Algorithm


TIMELINE:
	FRIDAY - Finish individual compiler parts (everybody)
	Weekend - TypeChecking (all)
	Weekend - Documentation
	
