   0  $accept : %entry% $end

   1  program :
   2          | program vdecl
   3          | program fdecl

   4  fdecl : FUNC ID LPAREN formals_opt RPAREN LBRACE vdecl_opt stmt_list RBRACE

   5  formals_opt :
   6              | formal_list

   7  formal_list : formal
   8              | formal_list COMMA formal

   9  formal : ID

  10  vdecl_opt :
  11            | vdecl_list

  12  vdecl_list : vdecl
  13             | vdecl_list vdecl

  14  vdecl : DECL ID ASSIGN expr SEMI

  15  stmt_list :
  16            | stmt_list stmt

  17  rev_stmt_list : stmt_list

  18  stmt : expr SEMI
  19       | RETURN expr_opt SEMI
  20       | PRINT expr SEMI
  21       | IF LPAREN expr RPAREN stmt ELSE stmt
  22       | IF LPAREN expr RPAREN stmt
  23       | LBRACE rev_stmt_list RBRACE

  24  expr_opt :
  25           | expr

  26  list_expr : NUM_LIT
  27            | STRING_LIT

  28  expr : NUM_LIT
  29       | STRING_LIT
  30       | LBRACE json_items RBRACE
  31       | LBRACK list_items RBRACK
  32       | BOOL_LIT
  33       | ID
  34       | expr PLUS expr
  35       | expr MINUS expr
  36       | expr TIMES expr
  37       | expr DIVIDE expr
  38       | expr EQ expr
  39       | expr NEQ expr
  40       | ID ASSIGN expr
  41       | ID LPAREN actuals_opt RPAREN
  42       | MAINFUNC
  43       | ID LBRACK list_expr RBRACK

  44  list_items :
  45             | list_element
  46             | list_element COMMA list_items

  47  list_element : NUM_LIT
  48               | STRING_LIT
  49               | LBRACK list_items RBRACK

  50  json_items :
  51             | json_item
  52             | json_item COMMA json_items

  53  json_item : STRING_LIT COLON json_item_value

  54  json_item_value : NUM_LIT
  55                  | STRING_LIT

  56  actuals_opt :
  57              | actuals_list

  58  actuals_list : expr
  59               | actuals_list COMMA expr

  60  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (60)
	program : .  (1)

	.  reduce 1

	program  goto 3


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	program : program . vdecl  (2)
	program : program . fdecl  (3)
	%entry% : '\001' program .  (60)

	FUNC  shift 4
	DECL  shift 5
	$end  reduce 60

	vdecl  goto 6
	fdecl  goto 7


state 4
	fdecl : FUNC . ID LPAREN formals_opt RPAREN LBRACE vdecl_opt stmt_list RBRACE  (4)

	ID  shift 8
	.  error


state 5
	vdecl : DECL . ID ASSIGN expr SEMI  (14)

	ID  shift 9
	.  error


state 6
	program : program vdecl .  (2)

	.  reduce 2


state 7
	program : program fdecl .  (3)

	.  reduce 3


state 8
	fdecl : FUNC ID . LPAREN formals_opt RPAREN LBRACE vdecl_opt stmt_list RBRACE  (4)

	LPAREN  shift 10
	.  error


state 9
	vdecl : DECL ID . ASSIGN expr SEMI  (14)

	ASSIGN  shift 11
	.  error


state 10
	fdecl : FUNC ID LPAREN . formals_opt RPAREN LBRACE vdecl_opt stmt_list RBRACE  (4)
	formals_opt : .  (5)

	ID  shift 12
	RPAREN  reduce 5

	formals_opt  goto 13
	formal_list  goto 14
	formal  goto 15


state 11
	vdecl : DECL ID ASSIGN . expr SEMI  (14)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 23


state 12
	formal : ID .  (9)

	.  reduce 9


state 13
	fdecl : FUNC ID LPAREN formals_opt . RPAREN LBRACE vdecl_opt stmt_list RBRACE  (4)

	RPAREN  shift 24
	.  error


state 14
	formals_opt : formal_list .  (6)
	formal_list : formal_list . COMMA formal  (8)

	COMMA  shift 25
	RPAREN  reduce 6


state 15
	formal_list : formal .  (7)

	.  reduce 7


state 16
	expr : LBRACE . json_items RBRACE  (30)
	json_items : .  (50)

	STRING_LIT  shift 26
	RBRACE  reduce 50

	json_items  goto 27
	json_item  goto 28


state 17
	expr : LBRACK . list_items RBRACK  (31)
	list_items : .  (44)

	LBRACK  shift 29
	NUM_LIT  shift 30
	STRING_LIT  shift 31
	RBRACK  reduce 44

	list_items  goto 32
	list_element  goto 33


state 18
	expr : MAINFUNC .  (42)

	.  reduce 42


state 19
	expr : NUM_LIT .  (28)

	.  reduce 28


state 20
	expr : STRING_LIT .  (29)

	.  reduce 29


state 21
	expr : BOOL_LIT .  (32)

	.  reduce 32


state 22
	expr : ID .  (33)
	expr : ID . ASSIGN expr  (40)
	expr : ID . LPAREN actuals_opt RPAREN  (41)
	expr : ID . LBRACK list_expr RBRACK  (43)

	LPAREN  shift 34
	LBRACK  shift 35
	ASSIGN  shift 36
	RPAREN  reduce 33
	COMMA  reduce 33
	SEMI  reduce 33
	PLUS  reduce 33
	MINUS  reduce 33
	TIMES  reduce 33
	DIVIDE  reduce 33
	EQ  reduce 33
	NEQ  reduce 33


state 23
	vdecl : DECL ID ASSIGN expr . SEMI  (14)
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	SEMI  shift 37
	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	.  error


state 24
	fdecl : FUNC ID LPAREN formals_opt RPAREN . LBRACE vdecl_opt stmt_list RBRACE  (4)

	LBRACE  shift 44
	.  error


state 25
	formal_list : formal_list COMMA . formal  (8)

	ID  shift 12
	.  error

	formal  goto 45


state 26
	json_item : STRING_LIT . COLON json_item_value  (53)

	COLON  shift 46
	.  error


state 27
	expr : LBRACE json_items . RBRACE  (30)

	RBRACE  shift 47
	.  error


state 28
	json_items : json_item .  (51)
	json_items : json_item . COMMA json_items  (52)

	COMMA  shift 48
	RBRACE  reduce 51


state 29
	list_element : LBRACK . list_items RBRACK  (49)
	list_items : .  (44)

	LBRACK  shift 29
	NUM_LIT  shift 30
	STRING_LIT  shift 31
	RBRACK  reduce 44

	list_items  goto 49
	list_element  goto 33


state 30
	list_element : NUM_LIT .  (47)

	.  reduce 47


state 31
	list_element : STRING_LIT .  (48)

	.  reduce 48


state 32
	expr : LBRACK list_items . RBRACK  (31)

	RBRACK  shift 50
	.  error


state 33
	list_items : list_element .  (45)
	list_items : list_element . COMMA list_items  (46)

	COMMA  shift 51
	RBRACK  reduce 45


state 34
	expr : ID LPAREN . actuals_opt RPAREN  (41)
	actuals_opt : .  (56)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	RPAREN  reduce 56

	expr  goto 52
	actuals_opt  goto 53
	actuals_list  goto 54


state 35
	expr : ID LBRACK . list_expr RBRACK  (43)

	NUM_LIT  shift 55
	STRING_LIT  shift 56
	.  error

	list_expr  goto 57


state 36
	expr : ID ASSIGN . expr  (40)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 58


state 37
	vdecl : DECL ID ASSIGN expr SEMI .  (14)

	.  reduce 14


state 38
	expr : expr PLUS . expr  (34)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 59


state 39
	expr : expr MINUS . expr  (35)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 60


state 40
	expr : expr TIMES . expr  (36)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 61


state 41
	expr : expr DIVIDE . expr  (37)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 62


state 42
	expr : expr EQ . expr  (38)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 63


state 43
	expr : expr NEQ . expr  (39)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 64


state 44
	fdecl : FUNC ID LPAREN formals_opt RPAREN LBRACE . vdecl_opt stmt_list RBRACE  (4)
	vdecl_opt : .  (10)

	DECL  shift 5
	LBRACE  reduce 10
	RBRACE  reduce 10
	LBRACK  reduce 10
	RETURN  reduce 10
	IF  reduce 10
	MAINFUNC  reduce 10
	PRINT  reduce 10
	NUM_LIT  reduce 10
	STRING_LIT  reduce 10
	BOOL_LIT  reduce 10
	ID  reduce 10

	vdecl  goto 65
	vdecl_opt  goto 66
	vdecl_list  goto 67


state 45
	formal_list : formal_list COMMA formal .  (8)

	.  reduce 8


state 46
	json_item : STRING_LIT COLON . json_item_value  (53)

	NUM_LIT  shift 68
	STRING_LIT  shift 69
	.  error

	json_item_value  goto 70


state 47
	expr : LBRACE json_items RBRACE .  (30)

	.  reduce 30


state 48
	json_items : json_item COMMA . json_items  (52)
	json_items : .  (50)

	STRING_LIT  shift 26
	RBRACE  reduce 50

	json_items  goto 71
	json_item  goto 28


state 49
	list_element : LBRACK list_items . RBRACK  (49)

	RBRACK  shift 72
	.  error


state 50
	expr : LBRACK list_items RBRACK .  (31)

	.  reduce 31


state 51
	list_items : list_element COMMA . list_items  (46)
	list_items : .  (44)

	LBRACK  shift 29
	NUM_LIT  shift 30
	STRING_LIT  shift 31
	RBRACK  reduce 44

	list_items  goto 73
	list_element  goto 33


state 52
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)
	actuals_list : expr .  (58)

	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	RPAREN  reduce 58
	COMMA  reduce 58


state 53
	expr : ID LPAREN actuals_opt . RPAREN  (41)

	RPAREN  shift 74
	.  error


state 54
	actuals_opt : actuals_list .  (57)
	actuals_list : actuals_list . COMMA expr  (59)

	COMMA  shift 75
	RPAREN  reduce 57


state 55
	list_expr : NUM_LIT .  (26)

	.  reduce 26


state 56
	list_expr : STRING_LIT .  (27)

	.  reduce 27


state 57
	expr : ID LBRACK list_expr . RBRACK  (43)

	RBRACK  shift 76
	.  error


state 58
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)
	expr : ID ASSIGN expr .  (40)

	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	RPAREN  reduce 40
	COMMA  reduce 40
	SEMI  reduce 40


state 59
	expr : expr . PLUS expr  (34)
	expr : expr PLUS expr .  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	TIMES  shift 40
	DIVIDE  shift 41
	RPAREN  reduce 34
	COMMA  reduce 34
	SEMI  reduce 34
	PLUS  reduce 34
	MINUS  reduce 34
	EQ  reduce 34
	NEQ  reduce 34


state 60
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr MINUS expr .  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	TIMES  shift 40
	DIVIDE  shift 41
	RPAREN  reduce 35
	COMMA  reduce 35
	SEMI  reduce 35
	PLUS  reduce 35
	MINUS  reduce 35
	EQ  reduce 35
	NEQ  reduce 35


state 61
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr TIMES expr .  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	.  reduce 36


state 62
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr DIVIDE expr .  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	.  reduce 37


state 63
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr EQ expr .  (38)
	expr : expr . NEQ expr  (39)

	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	RPAREN  reduce 38
	COMMA  reduce 38
	SEMI  reduce 38
	EQ  reduce 38
	NEQ  reduce 38


state 64
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)
	expr : expr NEQ expr .  (39)

	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	RPAREN  reduce 39
	COMMA  reduce 39
	SEMI  reduce 39
	EQ  reduce 39
	NEQ  reduce 39


state 65
	vdecl_list : vdecl .  (12)

	.  reduce 12


state 66
	fdecl : FUNC ID LPAREN formals_opt RPAREN LBRACE vdecl_opt . stmt_list RBRACE  (4)
	stmt_list : .  (15)

	.  reduce 15

	stmt_list  goto 77


state 67
	vdecl_opt : vdecl_list .  (11)
	vdecl_list : vdecl_list . vdecl  (13)

	DECL  shift 5
	LBRACE  reduce 11
	RBRACE  reduce 11
	LBRACK  reduce 11
	RETURN  reduce 11
	IF  reduce 11
	MAINFUNC  reduce 11
	PRINT  reduce 11
	NUM_LIT  reduce 11
	STRING_LIT  reduce 11
	BOOL_LIT  reduce 11
	ID  reduce 11

	vdecl  goto 78


state 68
	json_item_value : NUM_LIT .  (54)

	.  reduce 54


state 69
	json_item_value : STRING_LIT .  (55)

	.  reduce 55


state 70
	json_item : STRING_LIT COLON json_item_value .  (53)

	.  reduce 53


state 71
	json_items : json_item COMMA json_items .  (52)

	.  reduce 52


state 72
	list_element : LBRACK list_items RBRACK .  (49)

	.  reduce 49


state 73
	list_items : list_element COMMA list_items .  (46)

	.  reduce 46


state 74
	expr : ID LPAREN actuals_opt RPAREN .  (41)

	.  reduce 41


state 75
	actuals_list : actuals_list COMMA . expr  (59)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 79


state 76
	expr : ID LBRACK list_expr RBRACK .  (43)

	.  reduce 43


state 77
	fdecl : FUNC ID LPAREN formals_opt RPAREN LBRACE vdecl_opt stmt_list . RBRACE  (4)
	stmt_list : stmt_list . stmt  (16)

	LBRACE  shift 80
	RBRACE  shift 81
	LBRACK  shift 17
	RETURN  shift 82
	IF  shift 83
	MAINFUNC  shift 18
	PRINT  shift 84
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 85
	stmt  goto 86


state 78
	vdecl_list : vdecl_list vdecl .  (13)

	.  reduce 13


state 79
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)
	actuals_list : actuals_list COMMA expr .  (59)

	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	RPAREN  reduce 59
	COMMA  reduce 59


80: reduce/reduce conflict (reduce 15, reduce 50) on RBRACE
80: shift/reduce conflict (shift 26, reduce 15) on STRING_LIT
state 80
	stmt : LBRACE . rev_stmt_list RBRACE  (23)
	expr : LBRACE . json_items RBRACE  (30)
	stmt_list : .  (15)
	json_items : .  (50)

	STRING_LIT  shift 26
	LBRACE  reduce 15
	RBRACE  reduce 15
	LBRACK  reduce 15
	RETURN  reduce 15
	IF  reduce 15
	MAINFUNC  reduce 15
	PRINT  reduce 15
	NUM_LIT  reduce 15
	BOOL_LIT  reduce 15
	ID  reduce 15

	stmt_list  goto 87
	rev_stmt_list  goto 88
	json_items  goto 27
	json_item  goto 28


state 81
	fdecl : FUNC ID LPAREN formals_opt RPAREN LBRACE vdecl_opt stmt_list RBRACE .  (4)

	.  reduce 4


state 82
	stmt : RETURN . expr_opt SEMI  (19)
	expr_opt : .  (24)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	SEMI  reduce 24

	expr  goto 89
	expr_opt  goto 90


state 83
	stmt : IF . LPAREN expr RPAREN stmt ELSE stmt  (21)
	stmt : IF . LPAREN expr RPAREN stmt  (22)

	LPAREN  shift 91
	.  error


state 84
	stmt : PRINT . expr SEMI  (20)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 92


state 85
	stmt : expr . SEMI  (18)
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	SEMI  shift 93
	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	.  error


state 86
	stmt_list : stmt_list stmt .  (16)

	.  reduce 16


state 87
	stmt_list : stmt_list . stmt  (16)
	rev_stmt_list : stmt_list .  (17)

	LBRACE  shift 80
	LBRACK  shift 17
	RETURN  shift 82
	IF  shift 83
	MAINFUNC  shift 18
	PRINT  shift 84
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	RBRACE  reduce 17

	expr  goto 85
	stmt  goto 86


state 88
	stmt : LBRACE rev_stmt_list . RBRACE  (23)

	RBRACE  shift 94
	.  error


state 89
	expr_opt : expr .  (25)
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	SEMI  reduce 25


state 90
	stmt : RETURN expr_opt . SEMI  (19)

	SEMI  shift 95
	.  error


state 91
	stmt : IF LPAREN . expr RPAREN stmt ELSE stmt  (21)
	stmt : IF LPAREN . expr RPAREN stmt  (22)

	LBRACE  shift 16
	LBRACK  shift 17
	MAINFUNC  shift 18
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 96


state 92
	stmt : PRINT expr . SEMI  (20)
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	SEMI  shift 97
	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	.  error


state 93
	stmt : expr SEMI .  (18)

	.  reduce 18


state 94
	stmt : LBRACE rev_stmt_list RBRACE .  (23)

	.  reduce 23


state 95
	stmt : RETURN expr_opt SEMI .  (19)

	.  reduce 19


state 96
	stmt : IF LPAREN expr . RPAREN stmt ELSE stmt  (21)
	stmt : IF LPAREN expr . RPAREN stmt  (22)
	expr : expr . PLUS expr  (34)
	expr : expr . MINUS expr  (35)
	expr : expr . TIMES expr  (36)
	expr : expr . DIVIDE expr  (37)
	expr : expr . EQ expr  (38)
	expr : expr . NEQ expr  (39)

	RPAREN  shift 98
	PLUS  shift 38
	MINUS  shift 39
	TIMES  shift 40
	DIVIDE  shift 41
	EQ  shift 42
	NEQ  shift 43
	.  error


state 97
	stmt : PRINT expr SEMI .  (20)

	.  reduce 20


state 98
	stmt : IF LPAREN expr RPAREN . stmt ELSE stmt  (21)
	stmt : IF LPAREN expr RPAREN . stmt  (22)

	LBRACE  shift 80
	LBRACK  shift 17
	RETURN  shift 82
	IF  shift 83
	MAINFUNC  shift 18
	PRINT  shift 84
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 85
	stmt  goto 99


state 99
	stmt : IF LPAREN expr RPAREN stmt . ELSE stmt  (21)
	stmt : IF LPAREN expr RPAREN stmt .  (22)

	ELSE  shift 100
	LBRACE  reduce 22
	RBRACE  reduce 22
	LBRACK  reduce 22
	RETURN  reduce 22
	IF  reduce 22
	MAINFUNC  reduce 22
	PRINT  reduce 22
	NUM_LIT  reduce 22
	STRING_LIT  reduce 22
	BOOL_LIT  reduce 22
	ID  reduce 22


state 100
	stmt : IF LPAREN expr RPAREN stmt ELSE . stmt  (21)

	LBRACE  shift 80
	LBRACK  shift 17
	RETURN  shift 82
	IF  shift 83
	MAINFUNC  shift 18
	PRINT  shift 84
	NUM_LIT  shift 19
	STRING_LIT  shift 20
	BOOL_LIT  shift 21
	ID  shift 22
	.  error

	expr  goto 85
	stmt  goto 101


state 101
	stmt : IF LPAREN expr RPAREN stmt ELSE stmt .  (21)

	.  reduce 21


State 80 contains 1 shift/reduce conflict, 1 reduce/reduce conflict.


55 terminals, 23 nonterminals
61 grammar rules, 102 states
